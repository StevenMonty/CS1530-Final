"""
Django settings for django_react_proj project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import logging.config
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jg^$(lbjb*3-+cv(88ngpb4xb=6vbvxj*1i)%m!*c2(e_i6%b8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'corsheaders',

    'backend.apps.BackendConfig'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
]


ROOT_URLCONF = 'django_react_proj.urls'


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

JWT_AUTH = {
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'django_react_proj.utils.my_jwt_response_handler'
}

CORS_ORIGIN_ALLOW_ALL = True

CORS_ORIGIN_WHITELIST = (
    'http://localhost:3000',
    'http://localhost:8000',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_react_proj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# if DEBUG:
#     LOGLEVEL = logging.DEBUG
# else:
#     LOGLEVEL = os.environ.get('LOGLEVEL', 'info').upper()
#
# DJANGO_LOGLEVEL = os.environ.get('DJANGO_LOGLEVEL', 'info').upper()
# LOGGING_CONFIG = None
#
# logging_dict = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'consoleFormat': {
#             # exact format is not important, this is the minimum information
#             'format': '%(name)s: %(funcName)s{},%(lineno)d:%(levelname)s: %(message)s',
#         },
#         'fileFormat': {
#             'format': '%(asctime)s %(name)s: %(funcName)s{}:%(levelname)s: %(message)s',
#             # NOTE: Regex for log parsing, with and without capturing groups
#             #   ^(?P<date>[0-9\s:,\-]{23})\s(?P<modules>[a-zA-Z._{}]+):\s(?P<function>[<>a-zA-Z_{}]+):(?P<level>[A-Z]+):\s(?P<msg>.*)$
#             #   ^([0-9\s:,\-]{23})\s([a-zA-Z._{}]+):\s([<>a-zA-Z_{}]+):([A-Z]+):\s(.*)$
#         }
#     },
#     'handlers': {
#         'consoleHandler': {                             # Console logging
#             'class': 'logging.StreamHandler',
#             'formatter': 'consoleFormat',
#         },
#         'fileHandler': {                         # Master log file
#             'class':     'logging.FileHandler',
#             'formatter': 'fileFormat',
#             'filename':  f'{BASE_DIR}/logs/backend.log',
#         }
#     },
#     'loggers': {
#         # root logger
#         'backend': {
#             'level': LOGLEVEL,
#             'handlers': ['consoleHandler', 'fileHandler'],
#         },
#         'django': {
#             'level': DJANGO_LOGLEVEL,
#             'handlers': ['consoleHandler', 'fileHandler'],
#         },
#
#     },
# }
#
# logging.config.dictConfig(logging_dict)


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
